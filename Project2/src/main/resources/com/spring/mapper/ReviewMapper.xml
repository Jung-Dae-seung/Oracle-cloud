<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.ReviewMapper">

	<!-- 삽입 : bno,review,reviewer,star,restaurent 이며 bno의 경우 seq_board 값으로 삽입 (insert)-->
	<insert id="insert">
		<!-- 주로 pk 값을 미리 SQL 쿼리문을 통해서 처리해 두고 특정한 이름으로 결과를 보관 -->
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select seq_review.nextval from dual		
		</selectKey>	
		insert into reviewTBL(bno,reviewer,review,star,restaurent) values(#{bno},#{reviewer},#{review},#{star},#{restaurent})
	</insert>
	
	<!-- 삭제 : bno가 일치하면 삭제(delete) -->
		<delete id="delete">
			delete from reviewTBL where bno=#{bno}	
		</delete>
		
		
		<!-- 수정 : review,star,updatedate,  bno가 일치시(update) -->
		<update id="update">
			update reviewTBL
			set review=#{review},star=#{star},updatedate=sysdate
			where bno=#{bno}
		</update>

		<!-- 전체 조회 : 페이지 나누기 적용 -->
		<select id="list" resultType="com.spring.domain.ReviewVO">
			<![CDATA[
					select *
					from(select /*+INDEX_DESC(reviewTBL reviewTBL_pk)*/
					          rownum rn,bno,reviewer,review,reviewdate,updatedate
					     from reviewTBL
					     where 
			]]>		
			
			<include refid="criteria"></include>
			     
			<![CDATA[		     
					     
					     rownum <= (#{pageNum}*#{amount}))
					where rn > ((#{pageNum}-1)*#{amount})		
			]]>	
		</select>

		<!-- 전체 게시물 수 -->
		<select id="totalCnt" resultType="int">
			select count(*) from  reviewTBL
			where
			<include refid="criteria"></include>
				bno>0
		</select>
			
		<!-- 특정번호 조회 : bno에 해당하는 게시물 가져오기(read) -->
		<select id="read" resultType="com.spring.domain.ReviewVO">
			select * from reviewTBL where bno=#{bno}
		</select>
					
			
		<!-- 동적 SQL -->
		<sql id="criteria">
			<trim prefix="(" suffix=") AND"  prefixOverrides="OR" >
				<foreach collection="typeArr" item='type'>
					<trim prefix="OR">
						<choose>
							<when test="type=='T'.toString()">
								title like '%'||#{keyword}||'%'
							</when>
							<when test="type=='C'.toString()">
								content like '%'||#{keyword}||'%'
							</when>
							<when test="type=='W'.toString()">
								writer like '%'||#{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</sql>





</mapper>